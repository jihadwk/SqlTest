<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
            <!-- spring security 3 配置 -->
            <!-- 对所有页面拦截，需要ROLE_USER权限 自动生成登录页面-->
<!--             <http auto-config="true"> -->
<!--             	<intercept-url pattern="/**" access="ROLE_USER"/> -->
<!--             </http> -->
<!--             <authentication-manager> -->
<!--             	<authentication-provider> -->
<!--             		<user-service> -->
<!--             			<user name="job" password="123" authorities="ROLE_USER,ROLE_ADMIN"/> -->
<!--             			<user name="jack" password="456" authorities="ROLE_USER"/> -->
<!--             		</user-service> -->
<!--             	</authentication-provider> -->
<!--             </authentication-manager> -->

	<!-- 通过数据库查找用户拥有的权限来控制用户的访问 -->
		<!-- 启用 方法控制访问权限 用于直接拦截接口上的方法 拥有权限才能访问方法 eg:@RolesAllowed("ROLE_ADMIN") 方法上的注解-->
		<!-- <global-method-security jsr250-annotations="enabled"></global-method-security> -->
		<!-- 自己写登录页面，并且不拦截 -->
		<http pattern="/auth/login" security="none"></http>
		<!-- 配置拦截页面   启用页面级权限控制 使用表达式 -->
		<http auto-config="true" access-denied-page="/auth/denied" use-expressions="true">
			<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
			<!-- 设置用户默认登录页面 -->
			<form-login login-page="/auth/login"/>
		</http>
		<http pattern="/**/*.obj" security="none"/>
		<beans:bean id="customUserDetailsService" class="com.wk.security.CustomUserDetailsService"/> 
		<authentication-manager>
			<authentication-provider user-service-ref="customUserDetailsService"></authentication-provider>
		</authentication-manager>
   
 <!-- 	/**的意思是所有文件夹及里面的子文件夹
		/*是所有文件夹，不含子文件夹 -->
 </beans:beans> 